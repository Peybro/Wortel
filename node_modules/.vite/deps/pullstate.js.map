{
  "version": 3,
  "sources": ["../../fast-deep-equal/es6/index.js", "../../pullstate/dist/index.es.js", "../../immer/src/utils/errors.ts", "../../immer/src/utils/common.ts", "../../immer/src/utils/plugins.ts", "../../immer/src/core/scope.ts", "../../immer/src/core/finalize.ts", "../../immer/src/core/proxy.ts", "../../immer/src/core/immerClass.ts", "../../immer/src/core/current.ts", "../../immer/src/plugins/es5.ts", "../../immer/src/plugins/patches.ts", "../../immer/src/plugins/mapset.ts", "../../immer/src/plugins/all.ts", "../../immer/src/immer.ts", "../../immer/src/utils/env.ts"],
  "sourcesContent": ["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "import isEqual from'fast-deep-equal/es6';import React,{useRef,useState,useEffect,useContext}from'react';import produce$1,{enablePatches,produceWithPatches,produce,applyPatches}from'immer';function useStoreState(store, getSubState, deps) {\r\n    const updateRef = useRef({ state: undefined, initialized: false });\r\n    if (!updateRef.current.initialized) {\r\n        updateRef.current.state = getSubState ? getSubState(store.getRawState()) : store.getRawState();\r\n        updateRef.current.initialized = true;\r\n    }\r\n    const [, setUpdateTrigger] = useState(0);\r\n    useEffect(() => {\r\n        const effectState = { shouldUpdate: true };\r\n        function update() {\r\n            if (effectState.shouldUpdate) {\r\n                const nextSubState = getSubState\r\n                    ? getSubState(store.getRawState())\r\n                    : store.getRawState();\r\n                if (!isEqual(updateRef.current.state, nextSubState)) {\r\n                    if (effectState.shouldUpdate) {\r\n                        updateRef.current.state = nextSubState;\r\n                        setUpdateTrigger((val) => val + 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        store._addUpdateListener(update);\r\n        update();\r\n        return () => {\r\n            effectState.shouldUpdate = false;\r\n            store._removeUpdateListener(update);\r\n        };\r\n    }, deps !== null && deps !== void 0 ? deps : []);\r\n    if (deps !== undefined) {\r\n        const prevDeps = useRef(deps);\r\n        if (!isEqual(deps, prevDeps)) {\r\n            updateRef.current.state = getSubState(store.getRawState());\r\n        }\r\n    }\r\n    return updateRef.current.state;\r\n}let updateListenerOrd = 0;\r\nfunction fastGet(obj, path) {\r\n    return path.reduce((cur = obj, key) => {\r\n        return cur[key];\r\n    }, undefined);\r\n}\r\nfunction getSubStateFromPaths(store, paths) {\r\n    const state = store.getRawState();\r\n    const resp = [];\r\n    for (const path of paths) {\r\n        resp.push(fastGet(state, path));\r\n    }\r\n    return resp;\r\n}\r\nfunction useStoreStateOpt(store, paths) {\r\n    const [subState, setSubState] = useState(() => getSubStateFromPaths(store, paths));\r\n    const updateRef = useRef({\r\n        shouldUpdate: true,\r\n        onStoreUpdate: null,\r\n        currentSubState: null,\r\n        ordKey: `_${updateListenerOrd++}`,\r\n    });\r\n    updateRef.current.currentSubState = subState;\r\n    if (updateRef.current.onStoreUpdate === null) {\r\n        updateRef.current.onStoreUpdate = function onStoreUpdateOpt() {\r\n            if (updateRef.current.shouldUpdate) {\r\n                setSubState(getSubStateFromPaths(store, paths));\r\n            }\r\n        };\r\n        store._addUpdateListenerOpt(updateRef.current.onStoreUpdate, updateRef.current.ordKey, paths);\r\n    }\r\n    useEffect(() => () => {\r\n        updateRef.current.shouldUpdate = false;\r\n        store._removeUpdateListenerOpt(updateRef.current.ordKey);\r\n    }, []);\r\n    return subState;\r\n}function useLocalStore(initialState, deps) {\r\n    const storeRef = useRef();\r\n    if (storeRef.current == null) {\r\n        storeRef.current = new Store(initialState);\r\n    }\r\n    if (deps !== undefined) {\r\n        const prevDeps = useRef(deps);\r\n        if (!isEqual(deps, prevDeps)) {\r\n            storeRef.current = new Store(initialState);\r\n        }\r\n    }\r\n    return storeRef.current;\r\n}const globalClientState = {\r\n    storeOrdinal: 0,\r\n    batching: false,\r\n    flushStores: {}\r\n};enablePatches();\r\nfunction makeSubscriptionFunction(store, watch, listener) {\r\n    let lastWatchState = watch(store.getRawState());\r\n    return () => {\r\n        const currentState = store.getRawState();\r\n        const nextWatchState = watch(currentState);\r\n        if (!isEqual(nextWatchState, lastWatchState)) {\r\n            listener(nextWatchState, currentState, lastWatchState);\r\n            lastWatchState = nextWatchState;\r\n        }\r\n    };\r\n}\r\nfunction makeReactionFunctionCreator(watch, reaction) {\r\n    return (store) => {\r\n        let lastWatchState = watch(store.getRawState());\r\n        return (forceRun = false) => {\r\n            const currentState = store.getRawState();\r\n            const nextWatchState = watch(currentState);\r\n            if (forceRun || !isEqual(nextWatchState, lastWatchState)) {\r\n                if (store._optListenerCount > 0) {\r\n                    const [nextState, patches, inversePatches] = produceWithPatches(currentState, (s) => reaction(nextWatchState, s, currentState, lastWatchState));\r\n                    store._updateStateWithoutReaction(nextState);\r\n                    lastWatchState = nextWatchState;\r\n                    if (patches.length > 0) {\r\n                        store._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n                        return Object.keys(getChangedPathsFromPatches(patches));\r\n                    }\r\n                }\r\n                else {\r\n                    if (store._patchListeners.length > 0) {\r\n                        const [nextState, patches, inversePatches] = produceWithPatches(currentState, (s) => reaction(nextWatchState, s, currentState, lastWatchState));\r\n                        if (patches.length > 0) {\r\n                            store._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n                        }\r\n                        store._updateStateWithoutReaction(nextState);\r\n                    }\r\n                    else {\r\n                        store._updateStateWithoutReaction(produce(currentState, (s) => reaction(nextWatchState, s, currentState, lastWatchState)));\r\n                    }\r\n                    lastWatchState = nextWatchState;\r\n                }\r\n            }\r\n            return [];\r\n        };\r\n    };\r\n}\r\nconst optPathDivider = \"~._.~\";\r\nclass Store {\r\n    constructor(initialState) {\r\n        this.updateListeners = [];\r\n        this.ssr = false;\r\n        this.reactions = [];\r\n        this.clientSubscriptions = [];\r\n        this.reactionCreators = [];\r\n        this.optimizedUpdateListeners = {};\r\n        this.optimizedUpdateListenerPaths = {};\r\n        this.optimizedListenerPropertyMap = {};\r\n        this._optListenerCount = 0;\r\n        this._patchListeners = [];\r\n        if (initialState instanceof Function) {\r\n            const state = initialState();\r\n            this.currentState = state;\r\n            this.initialState = state;\r\n            this.createInitialState = initialState;\r\n        }\r\n        else {\r\n            this.currentState = initialState;\r\n            this.initialState = initialState;\r\n            this.createInitialState = () => initialState;\r\n        }\r\n        this.internalOrdId = globalClientState.storeOrdinal++;\r\n    }\r\n    _setInternalOptions({ ssr, reactionCreators = [] }) {\r\n        this.ssr = ssr;\r\n        this.reactionCreators = reactionCreators;\r\n        this.reactions = reactionCreators.map((rc) => rc(this));\r\n    }\r\n    _getReactionCreators() {\r\n        return this.reactionCreators;\r\n    }\r\n    _instantiateReactions() {\r\n        this.reactions = this.reactionCreators.map((rc) => rc(this));\r\n    }\r\n    _getInitialState() {\r\n        return this.createInitialState();\r\n    }\r\n    _updateStateWithoutReaction(nextState) {\r\n        this.currentState = nextState;\r\n    }\r\n    _updateState(nextState, updateKeyedPaths = []) {\r\n        this.currentState = nextState;\r\n        this.batchState = undefined;\r\n        for (const runReaction of this.reactions) {\r\n            updateKeyedPaths.push(...runReaction());\r\n        }\r\n        if (!this.ssr) {\r\n            for (const runSubscription of this.clientSubscriptions) {\r\n                runSubscription();\r\n            }\r\n            if (updateKeyedPaths.length > 0) {\r\n                const updateOrds = new Set();\r\n                for (const keyedPath of updateKeyedPaths) {\r\n                    if (this.optimizedListenerPropertyMap[keyedPath]) {\r\n                        for (const ord of this.optimizedListenerPropertyMap[keyedPath]) {\r\n                            updateOrds.add(ord);\r\n                        }\r\n                    }\r\n                }\r\n                for (const ord of updateOrds.values()) {\r\n                    if (this.optimizedUpdateListeners[ord]) {\r\n                        this.optimizedUpdateListeners[ord]();\r\n                    }\r\n                }\r\n            }\r\n            this.updateListeners.forEach((listener) => listener());\r\n        }\r\n    }\r\n    _addUpdateListener(listener) {\r\n        this.updateListeners.push(listener);\r\n    }\r\n    _addUpdateListenerOpt(listener, ordKey, paths) {\r\n        this.optimizedUpdateListeners[ordKey] = listener;\r\n        const listenerPathsKeyed = paths.map((path) => path.join(optPathDivider));\r\n        this.optimizedUpdateListenerPaths[ordKey] = listenerPathsKeyed;\r\n        for (const keyedPath of listenerPathsKeyed) {\r\n            if (this.optimizedListenerPropertyMap[keyedPath] == null) {\r\n                this.optimizedListenerPropertyMap[keyedPath] = [ordKey];\r\n            }\r\n            else {\r\n                this.optimizedListenerPropertyMap[keyedPath].push(ordKey);\r\n            }\r\n        }\r\n        this._optListenerCount++;\r\n    }\r\n    _removeUpdateListener(listener) {\r\n        this.updateListeners = this.updateListeners.filter((f) => f !== listener);\r\n    }\r\n    _removeUpdateListenerOpt(ordKey) {\r\n        const listenerPathsKeyed = this.optimizedUpdateListenerPaths[ordKey];\r\n        for (const keyedPath of listenerPathsKeyed) {\r\n            this.optimizedListenerPropertyMap[keyedPath] = this.optimizedListenerPropertyMap[keyedPath].filter((ord) => ord !== ordKey);\r\n        }\r\n        delete this.optimizedUpdateListenerPaths[ordKey];\r\n        delete this.optimizedUpdateListeners[ordKey];\r\n        this._optListenerCount--;\r\n    }\r\n    listenToPatches(patchListener) {\r\n        this._patchListeners.push(patchListener);\r\n        return () => {\r\n            this._patchListeners = this._patchListeners.filter((f) => f !== patchListener);\r\n        };\r\n    }\r\n    subscribe(watch, listener) {\r\n        if (!this.ssr) {\r\n            const func = makeSubscriptionFunction(this, watch, listener);\r\n            this.clientSubscriptions.push(func);\r\n            return () => {\r\n                this.clientSubscriptions = this.clientSubscriptions.filter((f) => f !== func);\r\n            };\r\n        }\r\n        return () => {\r\n            console.warn(`Pullstate: Subscriptions made on the server side are not registered - so therefor this call to unsubscribe does nothing.`);\r\n        };\r\n    }\r\n    createReaction(watch, reaction, { runNow = false, runNowWithSideEffects = false } = {}) {\r\n        const creator = makeReactionFunctionCreator(watch, reaction);\r\n        this.reactionCreators.push(creator);\r\n        const func = creator(this);\r\n        this.reactions.push(func);\r\n        if (runNow || runNowWithSideEffects) {\r\n            func(true);\r\n            if (runNowWithSideEffects && !this.ssr) {\r\n                this._updateState(this.currentState);\r\n            }\r\n        }\r\n        return () => {\r\n            this.reactions = this.reactions.filter((f) => f !== func);\r\n        };\r\n    }\r\n    getRawState() {\r\n        if (this.batchState !== undefined) {\r\n            return this.batchState;\r\n        }\r\n        else {\r\n            return this.currentState;\r\n        }\r\n    }\r\n    useState(getSubState, deps) {\r\n        return useStoreState(this, getSubState, deps);\r\n    }\r\n    useLocalCopyInitial(deps) {\r\n        return useLocalStore(this.createInitialState, deps);\r\n    }\r\n    useLocalCopySnapshot(deps) {\r\n        return useLocalStore(this.currentState, deps);\r\n    }\r\n    flushBatch(ignoreError = false) {\r\n        if (this.batchState !== undefined) {\r\n            if (this.batchState !== this.currentState) {\r\n                this._updateState(this.batchState);\r\n            }\r\n        }\r\n        else if (!ignoreError) {\r\n            console.error(`Pullstate: Trying to flush batch state which was never created or updated on`);\r\n        }\r\n        this.batchState = undefined;\r\n    }\r\n    update(updater, patchesCallback) {\r\n        if (globalClientState.batching) {\r\n            if (this.batchState === undefined) {\r\n                this.batchState = this.currentState;\r\n                globalClientState.flushStores[this.internalOrdId] = this;\r\n            }\r\n            const func = typeof updater === \"function\";\r\n            const [nextState, patches, inversePatches] = runUpdates(this.batchState, updater, func);\r\n            if (patches.length > 0 && (this._patchListeners.length > 0 || patchesCallback)) {\r\n                if (patchesCallback) {\r\n                    patchesCallback(patches, inversePatches);\r\n                }\r\n                this._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n            }\r\n            this.batchState = nextState;\r\n        }\r\n        else {\r\n            this.batchState = undefined;\r\n            update(this, updater, patchesCallback);\r\n        }\r\n    }\r\n    replace(newState) {\r\n        this._updateState(newState);\r\n    }\r\n    applyPatches(patches) {\r\n        applyPatchesToStore(this, patches);\r\n    }\r\n}\r\nfunction applyPatchesToStore(store, patches) {\r\n    const currentState = store.getRawState();\r\n    const nextState = applyPatches(currentState, patches);\r\n    if (nextState !== currentState) {\r\n        store._updateState(nextState, Object.keys(getChangedPathsFromPatches(patches)));\r\n    }\r\n}\r\nfunction getChangedPathsFromPatches(changePatches, prev = {}) {\r\n    for (const patch of changePatches) {\r\n        let curKey;\r\n        for (const p of patch.path) {\r\n            if (curKey) {\r\n                curKey = `${curKey}${optPathDivider}${p}`;\r\n            }\r\n            else {\r\n                curKey = p;\r\n            }\r\n            prev[curKey] = 1;\r\n        }\r\n    }\r\n    return prev;\r\n}\r\nfunction runUpdates(currentState, updater, func) {\r\n    return func\r\n        ? produceWithPatches(currentState, (s) => updater(s, currentState))\r\n        : updater.reduce(([nextState, patches, inversePatches], currentValue) => {\r\n            const resp = produceWithPatches(nextState, (s) => currentValue(s, nextState));\r\n            patches.push(...resp[1]);\r\n            inversePatches.push(...resp[2]);\r\n            return [resp[0], patches, inversePatches];\r\n        }, [currentState, [], []]);\r\n}\r\nfunction update(store, updater, patchesCallback) {\r\n    const currentState = store.getRawState();\r\n    const func = typeof updater === \"function\";\r\n    if (store._optListenerCount > 0) {\r\n        const [nextState, patches, inversePatches] = runUpdates(currentState, updater, func);\r\n        if (patches.length > 0) {\r\n            if (patchesCallback) {\r\n                patchesCallback(patches, inversePatches);\r\n            }\r\n            store._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n            store._updateState(nextState, Object.keys(getChangedPathsFromPatches(patches)));\r\n        }\r\n    }\r\n    else {\r\n        let nextState;\r\n        if (store._patchListeners.length > 0 || patchesCallback) {\r\n            const [ns, patches, inversePatches] = runUpdates(currentState, updater, func);\r\n            if (patches.length > 0) {\r\n                if (patchesCallback) {\r\n                    patchesCallback(patches, inversePatches);\r\n                }\r\n                store._patchListeners.forEach((listener) => listener(patches, inversePatches));\r\n            }\r\n            nextState = ns;\r\n        }\r\n        else {\r\n            nextState = produce(currentState, (s) => func\r\n                ? updater(s, currentState)\r\n                : updater.reduce((previousValue, currentUpdater) => {\r\n                    return produce(previousValue, (s) => currentUpdater(s, previousValue));\r\n                }, currentState));\r\n        }\r\n        if (nextState !== currentState) {\r\n            store._updateState(nextState);\r\n        }\r\n    }\r\n}function InjectStoreState({ store, on = s => s, children, }) {\r\n    const state = useStoreState(store, on);\r\n    return children(state);\r\n}var EAsyncEndTags;\r\n(function (EAsyncEndTags) {\r\n    EAsyncEndTags[\"THREW_ERROR\"] = \"THREW_ERROR\";\r\n    EAsyncEndTags[\"RETURNED_ERROR\"] = \"RETURNED_ERROR\";\r\n    EAsyncEndTags[\"UNFINISHED\"] = \"UNFINISHED\";\r\n    EAsyncEndTags[\"DORMANT\"] = \"DORMANT\";\r\n})(EAsyncEndTags || (EAsyncEndTags = {}));\r\nvar EPostActionContext;\r\n(function (EPostActionContext) {\r\n    EPostActionContext[\"WATCH_HIT_CACHE\"] = \"WATCH_HIT_CACHE\";\r\n    EPostActionContext[\"BECKON_HIT_CACHE\"] = \"BECKON_HIT_CACHE\";\r\n    EPostActionContext[\"RUN_HIT_CACHE\"] = \"RUN_HIT_CACHE\";\r\n    EPostActionContext[\"READ_HIT_CACHE\"] = \"READ_HIT_CACHE\";\r\n    EPostActionContext[\"READ_RUN\"] = \"READ_RUN\";\r\n    EPostActionContext[\"SHORT_CIRCUIT\"] = \"SHORT_CIRCUIT\";\r\n    EPostActionContext[\"DIRECT_RUN\"] = \"DIRECT_RUN\";\r\n    EPostActionContext[\"BECKON_RUN\"] = \"BECKON_RUN\";\r\n    EPostActionContext[\"CACHE_UPDATE\"] = \"CACHE_UPDATE\";\r\n})(EPostActionContext || (EPostActionContext = {}));const clientAsyncCache = {\r\n    listeners: {},\r\n    results: {},\r\n    actions: {},\r\n    actionOrd: {}\r\n};\r\nlet asyncCreationOrdinal = 0;\r\nfunction keyFromObject(json) {\r\n    if (json === null) {\r\n        return \"(n)\";\r\n    }\r\n    const typeOf = typeof json;\r\n    if (typeOf !== \"object\") {\r\n        if (typeOf === \"undefined\") {\r\n            return \"(u)\";\r\n        }\r\n        else if (typeOf === \"string\") {\r\n            return \":\" + json + \";\";\r\n        }\r\n        else if (typeOf === \"boolean\" || typeOf === \"number\") {\r\n            return \"(\" + json + \")\";\r\n        }\r\n    }\r\n    let prefix = \"{\";\r\n    for (const key of Object.keys(json).sort()) {\r\n        prefix += key + keyFromObject(json[key]);\r\n    }\r\n    return prefix + \"}\";\r\n}\r\nfunction notifyListeners(key) {\r\n    if (clientAsyncCache.listeners.hasOwnProperty(key)) {\r\n        for (const watchId of Object.keys(clientAsyncCache.listeners[key])) {\r\n            clientAsyncCache.listeners[key][watchId]();\r\n        }\r\n    }\r\n}\r\nfunction clearActionCache(key, clearPending = true, notify = true) {\r\n    if (clearPending && clientAsyncCache.actionOrd.hasOwnProperty(key)) {\r\n        clientAsyncCache.actionOrd[key] += 1;\r\n    }\r\n    delete clientAsyncCache.results[key];\r\n    if (notify) {\r\n        notifyListeners(key);\r\n    }\r\n}\r\nfunction actionOrdUpdate(cache, key) {\r\n    if (!cache.actionOrd.hasOwnProperty(key)) {\r\n        cache.actionOrd[key] = 0;\r\n    }\r\n    else {\r\n        cache.actionOrd[key] += 1;\r\n    }\r\n    return cache.actionOrd[key];\r\n}\r\nfunction successResult(payload = null, tags = [], message = \"\") {\r\n    return {\r\n        payload,\r\n        tags,\r\n        message,\r\n        error: false,\r\n        errorPayload: null\r\n    };\r\n}\r\nfunction errorResult(tags = [], message = \"\", errorPayload) {\r\n    return {\r\n        payload: null,\r\n        tags: [EAsyncEndTags.RETURNED_ERROR, ...tags],\r\n        message,\r\n        error: true,\r\n        errorPayload: errorPayload\r\n    };\r\n}\r\nclass PullstateAsyncError extends Error {\r\n    constructor(message, tags) {\r\n        super(message);\r\n        this.tags = tags;\r\n    }\r\n}\r\nlet storeErrorProxy;\r\ntry {\r\n    storeErrorProxy = new Proxy({}, {\r\n        get: function (obj, prop) {\r\n            throw new Error(`Pullstate: Trying to access store (${String(prop)}) inside async actions without the correct usage or setup.\r\nIf this error occurred on the server:\r\n* If using run(), make use of your created instance for this request: instance.runAsyncAction()\r\n* If using read(), useWatch(), useBeckon() etc. - make sure you have properly set up your <PullstateProvider/>\r\n\r\nIf this error occurred on the client:\r\n* Make sure you have created your \"pullstateCore\" object with all your stores, using createPullstateCore(), and are making use of instantiate() before rendering.`);\r\n        }\r\n    });\r\n}\r\ncatch {\r\n    storeErrorProxy = {};\r\n}\r\nconst startedButUnfinishedResult = [\r\n    true,\r\n    false,\r\n    {\r\n        message: \"\",\r\n        tags: [EAsyncEndTags.UNFINISHED],\r\n        error: true,\r\n        payload: null,\r\n        errorPayload: null\r\n    },\r\n    false,\r\n    -1\r\n];\r\nfunction createAsyncActionDirect(action, options = {}) {\r\n    return createAsyncAction(async (args, stores, customContext) => {\r\n        return successResult(await action(args, stores, customContext));\r\n    }, options);\r\n}\r\nfunction convertCustomCacheBreakHook(cacheBreakHook) {\r\n    if (cacheBreakHook != null) {\r\n        if (typeof cacheBreakHook === \"boolean\") {\r\n            return () => cacheBreakHook;\r\n        }\r\n        else if (typeof cacheBreakHook === \"number\") {\r\n            return ({ timeCached, result }) => {\r\n                if (!result.error) {\r\n                    return Date.now() - timeCached > cacheBreakHook;\r\n                }\r\n                return true;\r\n            };\r\n        }\r\n        return cacheBreakHook;\r\n    }\r\n    return undefined;\r\n}\r\nfunction createAsyncAction(action, { forceContext = false, shortCircuitHook, cacheBreakHook, postActionHook, subsetKey, actionId } = {}) {\r\n    const ordinal = actionId != null ? `_${actionId}` : asyncCreationOrdinal++;\r\n    const onServer = typeof window === \"undefined\";\r\n    function _createKey(args, customKey) {\r\n        if (customKey != null) {\r\n            return `${ordinal}-c-${customKey}`;\r\n        }\r\n        if (subsetKey !== undefined) {\r\n            return `${ordinal}-${keyFromObject(subsetKey(args))}`;\r\n        }\r\n        return `${ordinal}-${keyFromObject(args)}`;\r\n    }\r\n    const deferWaitingKey = `def_wait_${_createKey({})}`;\r\n    let cacheBreakWatcher = {};\r\n    let watchIdOrd = 0;\r\n    const shouldUpdate = {};\r\n    function runPostActionHook(result, args, stores, context) {\r\n        if (postActionHook !== undefined) {\r\n            postActionHook({ args, result, stores, context });\r\n        }\r\n    }\r\n    function getCachedResult({ args, cache, cacheBreakEnabled, context, fromListener, key, postActionEnabled, stores, customCacheBreak }) {\r\n        const useCacheBreakHook = customCacheBreak !== null && customCacheBreak !== void 0 ? customCacheBreak : cacheBreakHook;\r\n        if (cache.results.hasOwnProperty(key)) {\r\n            const cacheBreakLoop = cacheBreakWatcher.hasOwnProperty(key) && cacheBreakWatcher[key] > 2;\r\n            if (!onServer &&\r\n                !fromListener &&\r\n                cacheBreakEnabled &&\r\n                useCacheBreakHook != null\r\n                && cache.results[key][1] &&\r\n                useCacheBreakHook({\r\n                    args,\r\n                    result: cache.results[key][2],\r\n                    stores,\r\n                    timeCached: cache.results[key][4]\r\n                }) &&\r\n                !cacheBreakLoop) {\r\n                if (cacheBreakWatcher.hasOwnProperty(key)) {\r\n                    cacheBreakWatcher[key]++;\r\n                }\r\n                else {\r\n                    cacheBreakWatcher[key] = 1;\r\n                }\r\n                const previous = cache.results[key];\r\n                delete cache.results[key];\r\n                return { cacheBroke: true, response: undefined, previous };\r\n            }\r\n            else {\r\n                if (cacheBreakLoop) {\r\n                    console.error(`[${key}] Pullstate detected an infinite loop caused by cacheBreakHook()\r\nreturning true too often (breaking cache as soon as your action is resolving - hence\r\ncausing beckoned actions to run the action again) in one of your AsyncActions - Pullstate prevented\r\nfurther looping. Fix in your cacheBreakHook() is needed.`);\r\n                }\r\n                else {\r\n                    cacheBreakWatcher[key] = 0;\r\n                }\r\n                if (postActionEnabled && cache.results[key][1] && !fromListener) {\r\n                    runPostActionHook(cache.results[key][2], args, stores, context);\r\n                }\r\n                return {\r\n                    response: cache.results[key],\r\n                    cacheBroke: false,\r\n                    previous: undefined\r\n                };\r\n            }\r\n        }\r\n        return { cacheBroke: false, response: undefined, previous: undefined };\r\n    }\r\n    function createInternalAction(key, cache, args, stores, currentActionOrd, postActionEnabled, executionContext, customContext) {\r\n        return () => action(args, stores, customContext)\r\n            .then((resp) => {\r\n            if (currentActionOrd === cache.actionOrd[key]) {\r\n                if (postActionEnabled) {\r\n                    runPostActionHook(resp, args, stores, executionContext);\r\n                }\r\n                cache.results[key] = [true, true, resp, false, Date.now()];\r\n            }\r\n            return resp;\r\n        })\r\n            .catch((e) => {\r\n            console.error(e);\r\n            const result = {\r\n                payload: null,\r\n                errorPayload: null,\r\n                error: true,\r\n                tags: [EAsyncEndTags.THREW_ERROR],\r\n                message: e.message\r\n            };\r\n            if (currentActionOrd === cache.actionOrd[key]) {\r\n                if (postActionEnabled) {\r\n                    runPostActionHook(result, args, stores, executionContext);\r\n                }\r\n                cache.results[key] = [true, true, result, false, Date.now()];\r\n            }\r\n            return result;\r\n        })\r\n            .then((resp) => {\r\n            if (currentActionOrd === cache.actionOrd[key]) {\r\n                delete cache.actions[key];\r\n                if (!onServer) {\r\n                    notifyListeners(key);\r\n                }\r\n            }\r\n            return resp;\r\n        });\r\n    }\r\n    function checkKeyAndReturnResponse({ key, cache, initiate, ssr, args, stores, fromListener = false, postActionEnabled = true, cacheBreakEnabled = true, holdingResult, customContext, customCacheBreak, holdPrevious }) {\r\n        const cached = getCachedResult({\r\n            key,\r\n            cache,\r\n            args,\r\n            stores,\r\n            context: initiate ? EPostActionContext.BECKON_HIT_CACHE : EPostActionContext.WATCH_HIT_CACHE,\r\n            postActionEnabled,\r\n            cacheBreakEnabled,\r\n            fromListener,\r\n            customCacheBreak\r\n        });\r\n        if (cached.response) {\r\n            return cached.response;\r\n        }\r\n        if (!cache.actions.hasOwnProperty(key)) {\r\n            const currentActionOrd = actionOrdUpdate(cache, key);\r\n            if (initiate) {\r\n                if (shortCircuitHook !== undefined) {\r\n                    const shortCircuitResponse = shortCircuitHook({ args, stores });\r\n                    if (shortCircuitResponse !== false) {\r\n                        runPostActionHook(shortCircuitResponse, args, stores, EPostActionContext.SHORT_CIRCUIT);\r\n                        cache.results[key] = [true, true, shortCircuitResponse, false, Date.now()];\r\n                        return cache.results[key];\r\n                    }\r\n                }\r\n                if (ssr || !onServer) {\r\n                    cache.actions[key] = createInternalAction(key, cache, args, stores, currentActionOrd, postActionEnabled, EPostActionContext.BECKON_RUN, customContext);\r\n                }\r\n                if (!onServer) {\r\n                    cache.actions[key]();\r\n                    cache.results[key] = startedButUnfinishedResult;\r\n                }\r\n                else {\r\n                    return startedButUnfinishedResult;\r\n                }\r\n            }\r\n            else {\r\n                const resp = [\r\n                    false,\r\n                    false,\r\n                    {\r\n                        message: \"\",\r\n                        tags: [EAsyncEndTags.UNFINISHED],\r\n                        error: true,\r\n                        payload: null,\r\n                        errorPayload: null\r\n                    },\r\n                    false,\r\n                    -1\r\n                ];\r\n                if (!onServer) {\r\n                    cache.results[key] = resp;\r\n                }\r\n                if (holdPrevious) {\r\n                    if (holdingResult) {\r\n                        const response = [...holdingResult];\r\n                        response[3] = true;\r\n                        return response;\r\n                    }\r\n                    if (cached.previous != null) {\r\n                        const response = [...cached.previous];\r\n                        response[3] = true;\r\n                        return response;\r\n                    }\r\n                }\r\n                return resp;\r\n            }\r\n        }\r\n        if (holdPrevious) {\r\n            if (holdingResult) {\r\n                const response = [...holdingResult];\r\n                response[3] = true;\r\n                return response;\r\n            }\r\n            if (cached.previous != null) {\r\n                const response = [...cached.previous];\r\n                response[3] = true;\r\n                return response;\r\n            }\r\n        }\r\n        return startedButUnfinishedResult;\r\n    }\r\n    const read = (args = {}, { cacheBreakEnabled = true, postActionEnabled = true, key: customKey } = {}) => {\r\n        const key = _createKey(args, customKey);\r\n        const cache = onServer ? useContext(PullstateContext)._asyncCache : clientAsyncCache;\r\n        let stores;\r\n        let customContext;\r\n        if (onServer || forceContext) {\r\n            const pullstateContext = useContext(PullstateContext);\r\n            stores = pullstateContext.stores;\r\n            customContext = pullstateContext.customContext;\r\n        }\r\n        else if (clientStores.loaded) {\r\n            stores = clientStores.stores;\r\n        }\r\n        else {\r\n            stores = storeErrorProxy;\r\n        }\r\n        const cached = getCachedResult({\r\n            key,\r\n            cache,\r\n            args,\r\n            stores,\r\n            context: EPostActionContext.READ_HIT_CACHE,\r\n            postActionEnabled,\r\n            cacheBreakEnabled,\r\n            fromListener: false\r\n        });\r\n        if (cached.response) {\r\n            if (!cached.response[2].error) {\r\n                return cached.response[2].payload;\r\n            }\r\n            else {\r\n                throw new PullstateAsyncError(cached.response[2].message, cached.response[2].tags);\r\n            }\r\n        }\r\n        if (!cache.actions.hasOwnProperty(key)) {\r\n            if (shortCircuitHook !== undefined) {\r\n                const shortCircuitResponse = shortCircuitHook({ args, stores });\r\n                if (shortCircuitResponse !== false) {\r\n                    runPostActionHook(shortCircuitResponse, args, stores, EPostActionContext.SHORT_CIRCUIT);\r\n                    cache.results[key] = [true, true, shortCircuitResponse, false, Date.now()];\r\n                    if (!shortCircuitResponse.error) {\r\n                        return shortCircuitResponse.payload;\r\n                    }\r\n                    else {\r\n                        throw new PullstateAsyncError(shortCircuitResponse.message, shortCircuitResponse.tags);\r\n                    }\r\n                }\r\n            }\r\n            const currentActionOrd = actionOrdUpdate(cache, key);\r\n            cache.actions[key] = createInternalAction(key, cache, args, stores, currentActionOrd, postActionEnabled, EPostActionContext.READ_RUN, customContext);\r\n            if (onServer) {\r\n                throw new Error(`Pullstate Async Action: action.read() : Resolve all async state for Suspense actions before Server-side render ( make use of instance.runAsyncAction() )`);\r\n            }\r\n            throw cache.actions[key]();\r\n        }\r\n        if (onServer) {\r\n            throw new Error(`Pullstate Async Action: action.read() : Resolve all async state for Suspense actions before Server-side render ( make use of instance.runAsyncAction() )`);\r\n        }\r\n        const watchOrd = watchIdOrd++;\r\n        throw new Promise((resolve) => {\r\n            cache.listeners[key][watchOrd] = () => {\r\n                delete cache.listeners[key][watchOrd];\r\n                resolve();\r\n            };\r\n        });\r\n    };\r\n    const useWatch = (args = {}, { initiate = false, ssr = true, postActionEnabled = false, cacheBreakEnabled = false, holdPrevious = false, dormant = false, key: customKey, cacheBreak: customCacheBreakIncoming } = {}) => {\r\n        const responseRef = useRef();\r\n        const prevKeyRef = useRef(\".\");\r\n        const key = dormant ? \".\" : _createKey(args, customKey);\r\n        let watchId = useRef(-1);\r\n        if (watchId.current === -1) {\r\n            watchId.current = watchIdOrd++;\r\n        }\r\n        if (!dormant) {\r\n            if (!shouldUpdate.hasOwnProperty(key)) {\r\n                shouldUpdate[key] = {\r\n                    [watchId.current]: true\r\n                };\r\n            }\r\n            else {\r\n                shouldUpdate[key][watchId.current] = true;\r\n            }\r\n        }\r\n        const cache = onServer ? useContext(PullstateContext)._asyncCache : clientAsyncCache;\r\n        let stores;\r\n        let customContext;\r\n        if (onServer || forceContext) {\r\n            const pullstateContext = useContext(PullstateContext);\r\n            stores = pullstateContext.stores;\r\n            customContext = pullstateContext.customContext;\r\n        }\r\n        else if (clientStores.loaded) {\r\n            stores = clientStores.stores;\r\n        }\r\n        else {\r\n            stores = storeErrorProxy;\r\n        }\r\n        if (!onServer) {\r\n            const onAsyncStateChanged = () => {\r\n                if (shouldUpdate[key][watchId.current] && !isEqual(responseRef.current, cache.results[key])) {\r\n                    const nextResponse = checkKeyAndReturnResponse({\r\n                        key,\r\n                        cache,\r\n                        initiate,\r\n                        ssr,\r\n                        args,\r\n                        stores,\r\n                        fromListener: true,\r\n                        postActionEnabled,\r\n                        cacheBreakEnabled,\r\n                        holdingResult: undefined,\r\n                        customContext,\r\n                        holdPrevious\r\n                    });\r\n                    if (holdPrevious && !nextResponse[1] && responseRef.current != null && responseRef.current[1]) {\r\n                        responseRef.current = [...responseRef.current];\r\n                        responseRef.current[3] = true;\r\n                    }\r\n                    else {\r\n                        responseRef.current = nextResponse;\r\n                    }\r\n                    setWatchUpdate((prev) => {\r\n                        return prev + 1;\r\n                    });\r\n                }\r\n            };\r\n            if (!dormant) {\r\n                if (!cache.listeners.hasOwnProperty(key)) {\r\n                    cache.listeners[key] = {};\r\n                }\r\n                cache.listeners[key][watchId.current] = onAsyncStateChanged;\r\n                shouldUpdate[key][watchId.current] = true;\r\n            }\r\n            useEffect(() => {\r\n                if (!dormant) {\r\n                    cache.listeners[key][watchId.current] = onAsyncStateChanged;\r\n                    shouldUpdate[key][watchId.current] = true;\r\n                }\r\n                return () => {\r\n                    if (!dormant) {\r\n                        delete cache.listeners[key][watchId.current];\r\n                        shouldUpdate[key][watchId.current] = false;\r\n                    }\r\n                };\r\n            }, [key]);\r\n        }\r\n        const [_, setWatchUpdate] = useState(0);\r\n        if (dormant) {\r\n            responseRef.current =\r\n                holdPrevious && responseRef.current && responseRef.current[1]\r\n                    ? responseRef.current\r\n                    : [\r\n                        false,\r\n                        false,\r\n                        {\r\n                            message: \"\",\r\n                            tags: [EAsyncEndTags.DORMANT],\r\n                            error: true,\r\n                            payload: null\r\n                        },\r\n                        false,\r\n                        -1\r\n                    ];\r\n            prevKeyRef.current = \".\";\r\n        }\r\n        else if (prevKeyRef.current !== key) {\r\n            if (prevKeyRef.current !== null && shouldUpdate.hasOwnProperty(prevKeyRef.current)) {\r\n                delete cache.listeners[prevKeyRef.current][watchId.current];\r\n                shouldUpdate[prevKeyRef.current][watchId.current] = false;\r\n            }\r\n            prevKeyRef.current = key;\r\n            responseRef.current = checkKeyAndReturnResponse({\r\n                key,\r\n                cache,\r\n                initiate,\r\n                ssr,\r\n                args,\r\n                stores,\r\n                fromListener: false,\r\n                postActionEnabled,\r\n                cacheBreakEnabled,\r\n                holdingResult: holdPrevious && responseRef.current && responseRef.current[1] ? responseRef.current : undefined,\r\n                customContext,\r\n                customCacheBreak: convertCustomCacheBreakHook(customCacheBreakIncoming),\r\n                holdPrevious\r\n            });\r\n        }\r\n        return responseRef.current;\r\n    };\r\n    const useBeckon = (args = {}, { ssr = true, postActionEnabled = true, cacheBreakEnabled = true, holdPrevious = false, dormant = false, key } = {}) => {\r\n        const result = useWatch(args, {\r\n            initiate: true,\r\n            ssr,\r\n            postActionEnabled,\r\n            cacheBreakEnabled,\r\n            holdPrevious,\r\n            dormant,\r\n            key\r\n        });\r\n        return [result[1], result[2], result[3]];\r\n    };\r\n    const run = async (args = {}, inputs = {}) => {\r\n        const { treatAsUpdate = false, ignoreShortCircuit = false, respectCache = false, key: customKey, _asyncCache = clientAsyncCache, _stores = clientStores.loaded ? clientStores.stores : storeErrorProxy, _customContext, cacheBreak: customCacheBreak } = inputs;\r\n        const key = _createKey(args, customKey);\r\n        if (respectCache) {\r\n            const cached = getCachedResult({\r\n                key,\r\n                cache: _asyncCache,\r\n                args,\r\n                stores: _stores,\r\n                context: EPostActionContext.RUN_HIT_CACHE,\r\n                postActionEnabled: true,\r\n                cacheBreakEnabled: true,\r\n                fromListener: false,\r\n                customCacheBreak: convertCustomCacheBreakHook(customCacheBreak)\r\n            });\r\n            if (cached.response && cached.response[0]) {\r\n                if (!cached.response[1]) {\r\n                    const watchOrd = watchIdOrd++;\r\n                    if (!_asyncCache.listeners.hasOwnProperty(key)) {\r\n                        _asyncCache.listeners[key] = {};\r\n                    }\r\n                    return new Promise((resolve) => {\r\n                        _asyncCache.listeners[key][watchOrd] = () => {\r\n                            const [, finished, resp] = _asyncCache.results[key];\r\n                            if (finished) {\r\n                                delete _asyncCache.listeners[key][watchOrd];\r\n                                resolve(resp);\r\n                            }\r\n                        };\r\n                    });\r\n                }\r\n                return cached.response[2];\r\n            }\r\n        }\r\n        if (!ignoreShortCircuit && shortCircuitHook !== undefined) {\r\n            const shortCircuitResponse = shortCircuitHook({ args, stores: _stores });\r\n            if (shortCircuitResponse !== false) {\r\n                _asyncCache.results[key] = [true, true, shortCircuitResponse, false, Date.now()];\r\n                runPostActionHook(shortCircuitResponse, args, _stores, EPostActionContext.SHORT_CIRCUIT);\r\n                notifyListeners(key);\r\n                return shortCircuitResponse;\r\n            }\r\n        }\r\n        const [, prevFinished, prevResp, prevUpdate, prevCacheTime] = _asyncCache.results[key] || [\r\n            false,\r\n            false,\r\n            {\r\n                error: true,\r\n                message: \"\",\r\n                payload: null,\r\n                tags: [EAsyncEndTags.UNFINISHED]\r\n            },\r\n            false,\r\n            -1\r\n        ];\r\n        if (prevFinished && treatAsUpdate) {\r\n            _asyncCache.results[key] = [true, true, prevResp, true, prevCacheTime];\r\n        }\r\n        else {\r\n            _asyncCache.results[key] = [\r\n                true,\r\n                false,\r\n                {\r\n                    error: true,\r\n                    message: \"\",\r\n                    payload: null,\r\n                    tags: [EAsyncEndTags.UNFINISHED]\r\n                },\r\n                false,\r\n                -1\r\n            ];\r\n        }\r\n        let currentActionOrd = actionOrdUpdate(_asyncCache, key);\r\n        _asyncCache.actions[key] = createInternalAction(key, _asyncCache, args, _stores, currentActionOrd, true, EPostActionContext.DIRECT_RUN, _customContext);\r\n        notifyListeners(key);\r\n        return _asyncCache.actions[key]();\r\n    };\r\n    const clearCache = (args = {}, { key: customKey, notify = true } = {}) => {\r\n        const key = _createKey(args, customKey);\r\n        clearActionCache(key, true, notify);\r\n    };\r\n    const clearAllCache = ({ notify = true } = {}) => {\r\n        for (const key of Object.keys(clientAsyncCache.actionOrd)) {\r\n            if (key.startsWith(`${ordinal}-`)) {\r\n                clearActionCache(key, true, notify);\r\n            }\r\n        }\r\n    };\r\n    const clearAllUnwatchedCache = ({ notify = true } = {}) => {\r\n        for (const key of Object.keys(shouldUpdate)) {\r\n            if (!Object.values(shouldUpdate[key]).some((su) => su)) {\r\n                delete shouldUpdate[key];\r\n                clearActionCache(key, false, notify);\r\n            }\r\n        }\r\n    };\r\n    const setCached = (args, result, options) => {\r\n        const { notify = true, key: customKey } = options || {};\r\n        const key = _createKey(args, customKey);\r\n        const cache = onServer ? useContext(PullstateContext)._asyncCache : clientAsyncCache;\r\n        cache.results[key] = [true, true, result, false, Date.now()];\r\n        if (notify) {\r\n            notifyListeners(key);\r\n        }\r\n    };\r\n    const setCachedPayload = (args, payload, options) => {\r\n        return setCached(args, successResult(payload), options);\r\n    };\r\n    const updateCached = (args, updater, options) => {\r\n        const { notify = true, resetTimeCached = true, runPostActionHook: postAction = false, key: customKey } = options || {};\r\n        const key = _createKey(args, customKey);\r\n        const cache = onServer ? useContext(PullstateContext)._asyncCache : clientAsyncCache;\r\n        if (cache.results.hasOwnProperty(key) && !cache.results[key][2].error) {\r\n            const currentCached = cache.results[key][2].payload;\r\n            const newResult = {\r\n                payload: produce$1(currentCached, (s) => updater(s, currentCached)),\r\n                error: false,\r\n                message: cache.results[key][2].message,\r\n                tags: cache.results[key][2].tags\r\n            };\r\n            if (postAction) {\r\n                runPostActionHook(newResult, args, clientStores.loaded ? clientStores.stores : storeErrorProxy, EPostActionContext.CACHE_UPDATE);\r\n            }\r\n            cache.results[key] = [\r\n                true,\r\n                true,\r\n                newResult,\r\n                cache.results[key][3],\r\n                resetTimeCached ? Date.now() : cache.results[key][4]\r\n            ];\r\n            if (notify) {\r\n                notifyListeners(key);\r\n            }\r\n        }\r\n    };\r\n    const getCached = (args = {}, options) => {\r\n        var _a;\r\n        const { checkCacheBreak = false, key: customKey, cacheBreak: incomingCacheBreak } = options || {};\r\n        const key = _createKey(args, customKey);\r\n        let cacheBreakable = false;\r\n        const cache = clientAsyncCache;\r\n        if (cache.results.hasOwnProperty(key)) {\r\n            const finalizedCacheBreakHook = (_a = convertCustomCacheBreakHook(incomingCacheBreak)) !== null && _a !== void 0 ? _a : cacheBreakHook;\r\n            if (checkCacheBreak && finalizedCacheBreakHook !== undefined) {\r\n                const stores = onServer\r\n                    ? useContext(PullstateContext).stores\r\n                    : clientStores.loaded\r\n                        ? clientStores.stores\r\n                        : storeErrorProxy;\r\n                if (finalizedCacheBreakHook({\r\n                    args,\r\n                    result: cache.results[key][2],\r\n                    stores,\r\n                    timeCached: cache.results[key][4]\r\n                })) {\r\n                    cacheBreakable = true;\r\n                }\r\n            }\r\n            const [started, finished, result, updating, timeCached] = cache.results[key];\r\n            return {\r\n                started,\r\n                finished,\r\n                result: result,\r\n                existed: true,\r\n                cacheBreakable,\r\n                updating,\r\n                timeCached\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                started: false,\r\n                finished: false,\r\n                result: {\r\n                    message: \"\",\r\n                    tags: [EAsyncEndTags.UNFINISHED],\r\n                    error: true,\r\n                    payload: null,\r\n                    errorPayload: null\r\n                },\r\n                updating: false,\r\n                existed: false,\r\n                cacheBreakable,\r\n                timeCached: -1\r\n            };\r\n        }\r\n    };\r\n    let delayedRunActionTimeout;\r\n    const delayedRun = (args = {}, { clearOldRun = true, delay, immediateIfCached = true, ...otherRunOptions }) => {\r\n        if (clearOldRun) {\r\n            clearTimeout(delayedRunActionTimeout);\r\n        }\r\n        if (immediateIfCached) {\r\n            const { finished, cacheBreakable } = getCached(args, { checkCacheBreak: true });\r\n            if (finished && !cacheBreakable) {\r\n                run(args, otherRunOptions);\r\n                return () => {\r\n                };\r\n            }\r\n        }\r\n        let ref = { cancelled: false };\r\n        delayedRunActionTimeout = setTimeout(() => {\r\n            if (!ref.cancelled) {\r\n                run(args, otherRunOptions);\r\n            }\r\n        }, delay);\r\n        return () => {\r\n            ref.cancelled = true;\r\n        };\r\n    };\r\n    const use = (args = {}, { initiate = true, ssr = true, postActionEnabled, cacheBreakEnabled, holdPrevious = false, dormant = false, key, onSuccess, cacheBreak: customCacheBreakHook } = {}) => {\r\n        if (postActionEnabled == null) {\r\n            postActionEnabled = initiate;\r\n        }\r\n        if (cacheBreakEnabled == null) {\r\n            cacheBreakEnabled = initiate;\r\n        }\r\n        const raw = useWatch(args, {\r\n            initiate,\r\n            ssr,\r\n            postActionEnabled,\r\n            cacheBreakEnabled,\r\n            holdPrevious,\r\n            dormant,\r\n            key,\r\n            cacheBreak: customCacheBreakHook\r\n        });\r\n        const [isStarted, isFinished, result, isUpdating] = raw;\r\n        const isSuccess = isFinished && !result.error;\r\n        const isFailure = isFinished && result.error;\r\n        if (onSuccess) {\r\n            useEffect(() => {\r\n                if (isSuccess && !dormant) {\r\n                    onSuccess(result.payload, args);\r\n                }\r\n            }, [isSuccess]);\r\n        }\r\n        const renderPayload = (func) => {\r\n            if (!result.error) {\r\n                return func(result.payload);\r\n            }\r\n            return React.Fragment;\r\n        };\r\n        return {\r\n            isStarted,\r\n            isFinished,\r\n            isUpdating,\r\n            isSuccess,\r\n            isFailure,\r\n            isLoading: isStarted && (!isFinished || isUpdating),\r\n            endTags: result.tags,\r\n            error: result.error,\r\n            payload: result.payload,\r\n            errorPayload: result.errorPayload,\r\n            renderPayload,\r\n            message: result.message,\r\n            raw,\r\n            execute: (runOptions) => run(args, runOptions),\r\n            clearCached: () => clearCache(args),\r\n            setCached: (response, options) => {\r\n                setCached(args, response, options);\r\n            },\r\n            setCachedPayload: (payload, options) => {\r\n                setCachedPayload(args, payload, options);\r\n            },\r\n            updateCached: (updater, options) => {\r\n                updateCached(args, updater, options);\r\n            }\r\n        };\r\n    };\r\n    const useDefer = (inputs = {}) => {\r\n        const [argState, setArgState] = useState(() => ({\r\n            key: inputs.key ? inputs.key : deferWaitingKey,\r\n            args: {}\r\n        }));\r\n        const initialResponse = use({}, {\r\n            ...inputs,\r\n            key: argState.key,\r\n            initiate: false\r\n        });\r\n        const hasCached = (args = {}, options = {}) => {\r\n            var _a, _b;\r\n            const executionKey = (_a = inputs.key) !== null && _a !== void 0 ? _a : _createKey(args);\r\n            const { checkCacheBreak = true, successOnly = false } = options;\r\n            const cached = getCached(args, {\r\n                key: executionKey,\r\n                cacheBreak: (_b = options.cacheBreak) !== null && _b !== void 0 ? _b : inputs.cacheBreak,\r\n                checkCacheBreak\r\n            });\r\n            if (cached.existed) {\r\n                if (!checkCacheBreak || !cached.cacheBreakable) {\r\n                    return !successOnly || !cached.result.error;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        const unwatchExecuted = () => {\r\n            setArgState({ key: deferWaitingKey, args: {} });\r\n        };\r\n        const execute = (args = {}, runOptions) => {\r\n            var _a;\r\n            const executionKey = (_a = inputs.key) !== null && _a !== void 0 ? _a : _createKey(args);\r\n            if (executionKey !== argState.key) {\r\n                setArgState({ key: executionKey, args });\r\n            }\r\n            return run(args, {\r\n                ...runOptions,\r\n                key: executionKey,\r\n                cacheBreak: inputs.cacheBreak\r\n            }).then(resp => {\r\n                if (inputs.clearOnSuccess) {\r\n                    clearCache({}, { key: executionKey });\r\n                }\r\n                return resp;\r\n            });\r\n        };\r\n        return {\r\n            ...initialResponse,\r\n            clearCached: () => {\r\n                clearCache({}, { key: argState.key });\r\n            },\r\n            unwatchExecuted,\r\n            setCached: (response, options = {}) => {\r\n                options.key = argState.key;\r\n                setCached({}, response, options);\r\n            },\r\n            setCachedPayload: (payload, options = {}) => {\r\n                options.key = argState.key;\r\n                setCachedPayload({}, payload, options);\r\n            },\r\n            updateCached: (updater, options = {}) => {\r\n                options.key = argState.key;\r\n                updateCached({}, updater, options);\r\n            },\r\n            useDebouncedExecution: (args, delay, options = {}) => {\r\n                if (!onServer) {\r\n                    const stateRef = useRef({ update: false });\r\n                    const currentValue = useRef(undefined);\r\n                    const executionOrd = useRef(-1);\r\n                    const timeout = useRef(undefined);\r\n                    useEffect(() => {\r\n                        stateRef.current.update = true;\r\n                        return () => {\r\n                            stateRef.current.update = false;\r\n                        };\r\n                    }, []);\r\n                    const hasEqualityCheck = options.equality != null;\r\n                    if (hasEqualityCheck) {\r\n                        if (typeof options.equality === \"function\") {\r\n                            if ((currentValue.current === undefined || options.equality(currentValue.current, args))) {\r\n                                currentValue.current = args;\r\n                                executionOrd.current += 1;\r\n                            }\r\n                        }\r\n                        else if (currentValue.current !== options.equality) {\r\n                            currentValue.current = options.equality;\r\n                            executionOrd.current += 1;\r\n                        }\r\n                    }\r\n                    else if (!isEqual(currentValue.current, args)) {\r\n                        currentValue.current = args;\r\n                        executionOrd.current += 1;\r\n                    }\r\n                    useEffect(() => {\r\n                        var _a, _b, _c;\r\n                        clearTimeout(timeout.current);\r\n                        const executeAction = () => {\r\n                            var _a;\r\n                            if (stateRef.current.update) {\r\n                                execute(args, (_a = options.executeOptions) !== null && _a !== void 0 ? _a : { respectCache: true });\r\n                            }\r\n                        };\r\n                        if ((_b = (_a = options.validInput) === null || _a === void 0 ? void 0 : _a.call(options, args)) !== null && _b !== void 0 ? _b : true) {\r\n                            if (hasCached(args)) {\r\n                                executeAction();\r\n                            }\r\n                            else {\r\n                                timeout.current = setTimeout(executeAction, delay);\r\n                            }\r\n                        }\r\n                        else if (!((_c = options.watchLastValid) !== null && _c !== void 0 ? _c : false)) {\r\n                            unwatchExecuted();\r\n                        }\r\n                    }, [executionOrd.current]);\r\n                }\r\n            },\r\n            hasCached,\r\n            execute,\r\n            args: argState.args,\r\n            key: argState.key\r\n        };\r\n    };\r\n    return {\r\n        use,\r\n        useDefer,\r\n        read,\r\n        useBeckon,\r\n        useWatch,\r\n        run,\r\n        delayedRun,\r\n        clearCache,\r\n        clearAllCache,\r\n        clearAllUnwatchedCache,\r\n        getCached,\r\n        setCached,\r\n        setCachedPayload,\r\n        updateCached\r\n    };\r\n}const PullstateContext = React.createContext(null);\r\nconst PullstateProvider = ({ instance, children }) => {\r\n    return React.createElement(PullstateContext.Provider, { value: instance }, children);\r\n};\r\nlet singleton = null;\r\nconst clientStores = {\r\n    internalClientStores: true,\r\n    loaded: false,\r\n    stores: {}\r\n};\r\nclass PullstateSingleton {\r\n    constructor(allStores, options = {}) {\r\n        this.options = {};\r\n        if (singleton !== null) {\r\n            console.error(`Pullstate: createPullstate() - Should not be creating the core Pullstate class more than once! In order to re-use pull state, you need to call instantiate() on your already created object.`);\r\n        }\r\n        singleton = this;\r\n        clientStores.stores = allStores;\r\n        clientStores.loaded = true;\r\n        this.options = options;\r\n    }\r\n    instantiate({ hydrateSnapshot, ssr = false, customContext } = {}) {\r\n        if (!ssr) {\r\n            const instantiated = new PullstateInstance(clientStores.stores, false, customContext);\r\n            if (hydrateSnapshot != null) {\r\n                instantiated.hydrateFromSnapshot(hydrateSnapshot);\r\n            }\r\n            instantiated.instantiateReactions();\r\n            return instantiated;\r\n        }\r\n        const newStores = {};\r\n        for (const storeName of Object.keys(clientStores.stores)) {\r\n            if (hydrateSnapshot == null) {\r\n                newStores[storeName] = new Store(clientStores.stores[storeName]._getInitialState());\r\n            }\r\n            else if (hydrateSnapshot.hasOwnProperty(storeName)) {\r\n                newStores[storeName] = new Store(hydrateSnapshot.allState[storeName]);\r\n            }\r\n            else {\r\n                newStores[storeName] = new Store(clientStores.stores[storeName]._getInitialState());\r\n                console.warn(`Pullstate (instantiate): store [${storeName}] didn't hydrate any state (data was non-existent on hydration object)`);\r\n            }\r\n            newStores[storeName]._setInternalOptions({\r\n                ssr,\r\n                reactionCreators: clientStores.stores[storeName]._getReactionCreators()\r\n            });\r\n        }\r\n        return new PullstateInstance(newStores, true, customContext);\r\n    }\r\n    useStores() {\r\n        return useStores();\r\n    }\r\n    useInstance() {\r\n        return useInstance();\r\n    }\r\n    createAsyncActionDirect(action, options = {}) {\r\n        return createAsyncActionDirect(action, options);\r\n    }\r\n    createAsyncAction(action, options = {}) {\r\n        var _a;\r\n        if (((_a = this.options.asyncActions) === null || _a === void 0 ? void 0 : _a.defaultCachingSeconds) && !options.cacheBreakHook) {\r\n            options.cacheBreakHook = (inputs) => inputs.timeCached < Date.now() - this.options.asyncActions.defaultCachingSeconds * 1000;\r\n        }\r\n        return createAsyncAction(action, options);\r\n    }\r\n}\r\nclass PullstateInstance {\r\n    constructor(allStores, ssr, customContext) {\r\n        this._ssr = false;\r\n        this._stores = {};\r\n        this._asyncCache = {\r\n            listeners: {},\r\n            results: {},\r\n            actions: {},\r\n            actionOrd: {}\r\n        };\r\n        this._stores = allStores;\r\n        this._ssr = ssr;\r\n        this._customContext = customContext;\r\n    }\r\n    getAllUnresolvedAsyncActions() {\r\n        return Object.keys(this._asyncCache.actions).map((key) => this._asyncCache.actions[key]());\r\n    }\r\n    instantiateReactions() {\r\n        for (const storeName of Object.keys(this._stores)) {\r\n            this._stores[storeName]._instantiateReactions();\r\n        }\r\n    }\r\n    getPullstateSnapshot() {\r\n        const allState = {};\r\n        for (const storeName of Object.keys(this._stores)) {\r\n            allState[storeName] = this._stores[storeName].getRawState();\r\n        }\r\n        return { allState, asyncResults: this._asyncCache.results, asyncActionOrd: this._asyncCache.actionOrd };\r\n    }\r\n    async resolveAsyncState() {\r\n        const promises = this.getAllUnresolvedAsyncActions();\r\n        await Promise.all(promises);\r\n    }\r\n    hasAsyncStateToResolve() {\r\n        return Object.keys(this._asyncCache.actions).length > 0;\r\n    }\r\n    get stores() {\r\n        return this._stores;\r\n    }\r\n    get customContext() {\r\n        return this._customContext;\r\n    }\r\n    async runAsyncAction(asyncAction, args = {}, runOptions = {}) {\r\n        if (this._ssr) {\r\n            runOptions._asyncCache = this._asyncCache;\r\n            runOptions._stores = this._stores;\r\n            runOptions._customContext = this._customContext;\r\n        }\r\n        return await asyncAction.run(args, runOptions);\r\n    }\r\n    hydrateFromSnapshot(snapshot) {\r\n        for (const storeName of Object.keys(this._stores)) {\r\n            if (snapshot.allState.hasOwnProperty(storeName)) {\r\n                this._stores[storeName]._updateStateWithoutReaction(snapshot.allState[storeName]);\r\n            }\r\n            else {\r\n                console.warn(`${storeName} didn't hydrate any state (data was non-existent on hydration object)`);\r\n            }\r\n        }\r\n        clientAsyncCache.results = snapshot.asyncResults || {};\r\n        clientAsyncCache.actionOrd = snapshot.asyncActionOrd || {};\r\n    }\r\n}\r\nfunction createPullstateCore(allStores = {}, options = {}) {\r\n    return new PullstateSingleton(allStores, options);\r\n}\r\nfunction useStores() {\r\n    return useContext(PullstateContext).stores;\r\n}\r\nfunction useInstance() {\r\n    return useContext(PullstateContext);\r\n}var EAsyncActionInjectType;\r\n(function (EAsyncActionInjectType) {\r\n    EAsyncActionInjectType[\"WATCH\"] = \"watch\";\r\n    EAsyncActionInjectType[\"BECKON\"] = \"beckon\";\r\n})(EAsyncActionInjectType || (EAsyncActionInjectType = {}));\r\nfunction InjectAsyncAction(props) {\r\n    if (props.type === EAsyncActionInjectType.BECKON) {\r\n        const response = props.action.useBeckon(props.args, props.options);\r\n        return props.children(response);\r\n    }\r\n    const response = props.action.useWatch(props.args, props.options);\r\n    return props.children(response);\r\n}function InjectStoreStateOpt({ store, paths, children }) {\r\n    const state = useStoreStateOpt(store, paths);\r\n    return children(state);\r\n}function registerInDevtools(stores, { namespace = \"\" } = {}) {\r\n    var _a;\r\n    const devToolsExtension = typeof window !== \"undefined\" ? (_a = window) === null || _a === void 0 ? void 0 : _a.__REDUX_DEVTOOLS_EXTENSION__ : undefined;\r\n    if (devToolsExtension) {\r\n        for (const key of Object.keys(stores)) {\r\n            const store = stores[key];\r\n            const devTools = devToolsExtension.connect({ name: `${namespace}${key}` });\r\n            devTools.init(store.getRawState());\r\n            let ignoreNext = false;\r\n            store.subscribe((s) => s, (watched) => {\r\n                if (ignoreNext) {\r\n                    ignoreNext = false;\r\n                    return;\r\n                }\r\n                devTools.send(\"Change\", watched);\r\n            });\r\n            devTools.subscribe((message) => {\r\n                if (message.type === \"DISPATCH\" && message.state) {\r\n                    ignoreNext = true;\r\n                    const parsed = JSON.parse(message.state);\r\n                    store.replace(parsed);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}const batchState = {};\r\nfunction setupBatch({ uiBatchFunction }) {\r\n    batchState.uiBatchFunction = uiBatchFunction;\r\n}\r\nfunction batch(runUpdates) {\r\n    if (globalClientState.batching) {\r\n        throw new Error(\"Pullstate: Can't enact two batch() update functions at the same time-\\n\" +\r\n            \"make sure you are not running a batch() inside of a batch() by mistake.\");\r\n    }\r\n    globalClientState.batching = true;\r\n    try {\r\n        runUpdates();\r\n    }\r\n    finally {\r\n        if (batchState.uiBatchFunction) {\r\n            batchState.uiBatchFunction(() => {\r\n                Object.values(globalClientState.flushStores).forEach(store => store.flushBatch(true));\r\n            });\r\n        }\r\n        else {\r\n            Object.values(globalClientState.flushStores).forEach(store => store.flushBatch(true));\r\n        }\r\n        globalClientState.flushStores = {};\r\n        globalClientState.batching = false;\r\n    }\r\n}export{EAsyncActionInjectType,EAsyncEndTags,EPostActionContext,InjectAsyncAction,InjectStoreState,InjectStoreStateOpt,PullstateContext,PullstateProvider,Store,batch,createAsyncAction,createAsyncActionDirect,createPullstateCore,errorResult,registerInDevtools,setupBatch,successResult,update,useInstance,useLocalStore,useStoreState,useStoreStateOpt,useStores};", "const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n", "import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n", "import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n", "import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n", "import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyType.Set ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n", "import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\tstate.copy_![prop] === value &&\n\t\t\t// special case: NaN\n\t\t\ttypeof value !== \"number\" &&\n\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t(value !== undefined || prop in state.copy_)\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n", "import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (\n\t\targ1: any,\n\t\targ2?: any,\n\t\targ3?: any\n\t): any => {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n", "import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n", "import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n", "import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tconst p = \"\" + path[i]\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n", "// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n", "import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n", "import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n", "// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n"],
  "mappings": "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",
  "names": []
}
